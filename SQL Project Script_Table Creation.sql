CREATE DATABASE MusicStreaming;
USE MusicStreaming;

CREATE TABLE User (
    UserID VARCHAR(50) PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    SubscriptionType VARCHAR(50) NOT NULL
);

CREATE TABLE MusicLabel (
    LabelID VARCHAR(50) PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    EstablishedYear INT NOT NULL,
    ContactInfo VARCHAR(255),
    Headquarters VARCHAR(255)
    
);

CREATE TABLE Artist (
    ArtistID VARCHAR(50) PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    StageName VARCHAR(100) UNIQUE NOT NULL,
    Birthdate DATE NOT NULL,
    Genre VARCHAR(50) NOT NULL,
    ContactInfo VARCHAR(255),
    LabelID VARCHAR(50),
    FOREIGN KEY (LabelID) REFERENCES MusicLabel(LabelID) ON DELETE SET NULL
);
CREATE TABLE Contract (
    ContractID VARCHAR(50) PRIMARY KEY,
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL,
    ContractTerms TEXT NOT NULL,
    ArtistID VARCHAR(50) NOT NULL,
    LabelID VARCHAR(50) NOT NULL,
    FOREIGN KEY (ArtistID) REFERENCES Artist(ArtistID) ON DELETE CASCADE,
    FOREIGN KEY (LabelID) REFERENCES MusicLabel(LabelID) ON DELETE CASCADE
);
CREATE TABLE Album (
    AlbumID VARCHAR(50) PRIMARY KEY,
    Title VARCHAR(100) NOT NULL,
    ReleaseDate DATE NOT NULL,
    Genre VARCHAR(50) NOT NULL,
    LabelID VARCHAR(50) NOT NULL,
    ArtistID VARCHAR(50) NOT NULL,
    FOREIGN KEY (LabelID) REFERENCES MusicLabel(LabelID) ON DELETE CASCADE,
    FOREIGN KEY (ArtistID) REFERENCES Artist(ArtistID) ON DELETE CASCADE
);
CREATE TABLE Track (
    TrackID VARCHAR(50) PRIMARY KEY,
    Title VARCHAR(100) NOT NULL,
    Duration TIME NOT NULL,
    AlbumID VARCHAR(50) NOT NULL,
    FOREIGN KEY (AlbumID) REFERENCES Album(AlbumID) ON DELETE CASCADE
);

CREATE TABLE Playlist (
    PlaylistID VARCHAR(50) PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    CreatedBy VARCHAR(100) NOT NULL,
    CreationDate DATE NOT NULL,
    UserID VARCHAR(50) NOT NULL,
    FOREIGN KEY (UserID) REFERENCES User(UserID) ON DELETE CASCADE
);

CREATE TABLE PlaylistTrack (
    PlaylistID VARCHAR(50),
    TrackID VARCHAR(50),
    PRIMARY KEY (PlaylistID, TrackID),
    FOREIGN KEY (PlaylistID) REFERENCES Playlist(PlaylistID) ON DELETE CASCADE,
    FOREIGN KEY (TrackID) REFERENCES Track(TrackID) ON DELETE CASCADE
);
